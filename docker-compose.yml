version: "3"
services:
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports: 
      - "5000:80"
    networks:
      - internal
    volumes:
      - ./application/:/var/www/html/
      - ./logs/nginx:/var/log/nginx/
    container_name: nginx
    depends_on:
      - php

  php:
    build:
      context: .
      dockerfile: php/Dockerfile
    networks:
      - internal
    volumes:
      - ./application/:/var/www/html/
      - ./logs/php.log:/var/log/fpm-php.www.log
    container_name: php
    expose:
      - "9000"
    depends_on:
      - mysql # Ici on utilise db, qui est le nom correct du service MySQL

  mysql:  # Assurez-vous que ce nom correspond bien Ã  "db"
    container_name: mysql  # Vous utilisez "db" comme alias dans depends_on
    restart: always
    image: mysql:latest
    ports:
     - "3307:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"  # Autoriser un mot de passe root vide
      MYSQL_DATABASE: Laravel_docker
    volumes:
      - ./db-data:/var/lib/mysql
    networks:
      - internal
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ""  # Vide si aucun mot de passe root
    depends_on:
      - mysql
    networks:
      - internal
networks:
  internal:
    driver: bridge
